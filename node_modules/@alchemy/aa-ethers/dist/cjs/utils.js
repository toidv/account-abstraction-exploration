"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertEthersSignerToAccountSigner = exports.convertWalletToAccountSigner = void 0;
const convertWalletToAccountSigner = (wallet) => {
    return {
        getAddress: async () => Promise.resolve(wallet.address),
        signMessage: async (msg) => (await wallet.signMessage(msg)),
        signTypedData: async (params) => {
            return (await wallet._signTypedData(params.domain ?? {}, params.types, params.message));
        },
    };
};
exports.convertWalletToAccountSigner = convertWalletToAccountSigner;
const convertEthersSignerToAccountSigner = (signer) => {
    return {
        getAddress: async () => signer.getAddress(),
        signMessage: async (msg) => (await signer.signMessage(msg)),
        signTypedData: async (_params) => {
            throw new Error("signTypedData is not supported for ethers signers; use Wallet");
        },
    };
};
exports.convertEthersSignerToAccountSigner = convertEthersSignerToAccountSigner;
//# sourceMappingURL=utils.js.map